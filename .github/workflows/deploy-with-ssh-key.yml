name: Build & Deploy to IONOS VPS (Standalone)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    env:
      NODE_OPTIONS: --max-old-space-size=4096
      NEXT_TELEMETRY_DISABLED: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Cache Next.js build cache
      uses: actions/cache@v4
      with:
        path: .next/cache
        key: next-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          next-${{ runner.os }}-
          
    - name: Clean install dependencies
      run: npm ci --no-audit --progress=false
      
    - name: Build application (standalone)
      run: npm run build
      
    - name: Create deployment bundle
      run: |
        tar -czf bundle.tar.gz \
          .next/standalone \
          .next/static \
          public \
          package.json \
          app.js \
          ecosystem.config.js
        
    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        
    - name: Upload bundle to VPS
      run: |
        scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
          bundle.tar.gz \
          apiportfolio@${{ secrets.VPS_HOST }}:/var/www/vhosts/apiportfolio.mysticdatanode.net/releases/${{ github.sha }}.tar.gz
        
    - name: Deploy and activate release
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no apiportfolio@${{ secrets.VPS_HOST }} "
          set -euo pipefail &&
          echo 'Creating release directory...' &&
          mkdir -p /var/www/vhosts/apiportfolio.mysticdatanode.net/releases/${{ github.sha }} &&
          cd /var/www/vhosts/apiportfolio.mysticdatanode.net/releases/${{ github.sha }} &&
          echo 'Extracting bundle...' &&
          tar -xzf ../${{ github.sha }}.tar.gz &&
          rm ../${{ github.sha }}.tar.gz &&
          echo 'Activating release...' &&
          rsync -a . /var/www/vhosts/apiportfolio.mysticdatanode.net/httpdocs/ --delete &&
          cd /var/www/vhosts/apiportfolio.mysticdatanode.net/httpdocs &&
          echo 'Installing runtime dependencies...' &&
          test -f package-lock.json && /usr/bin/npm ci --omit=dev --no-audit || true &&
          echo 'Stopping old processes...' &&
          pkill -f 'node.*server.js' || pkill -f 'node.*app.js' || true &&
          echo 'Starting application...' &&
          if [ -f .next/standalone/server.js ]; then
            nohup /usr/bin/node .next/standalone/server.js > /tmp/portfolio.log 2>&1 & echo \$! > /tmp/portfolio.pid
          else
            nohup /usr/bin/node app.js > /tmp/portfolio.log 2>&1 & echo \$! > /tmp/portfolio.pid
          fi &&
          sleep 2 &&
          echo 'Application started with PID:' \$(cat /tmp/portfolio.pid) &&
          echo 'Deployment completed successfully!'
        "
        
    - name: Verify Deployment
      run: |
        echo "Waiting for application to start..."
        sleep 5
        curl -f -s -o /dev/null ${{ secrets.SITE_URL }} || echo "Site check failed, but deployment may still be successful"
        echo "Deployment completed!"