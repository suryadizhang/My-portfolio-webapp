name: Deploy to IONOS VPS with SSH Key

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to VPS
      run: |
        # Create deployment directory on VPS
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no apiportfolio@${{ secrets.VPS_HOST }} "
          cd /var/www/vhosts/apiportfolio.mysticdatanode.net/httpdocs &&
          mkdir -p portfolio-backup &&
          if [ -f package.json ]; then
            echo 'Backing up existing deployment...'
            rsync -av --exclude=node_modules --exclude=.git --exclude=portfolio-backup . portfolio-backup/
          fi
        "
        
        # Copy built application to VPS
        rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='node_modules' \
          --exclude='.next' \
          --delete \
          ./ apiportfolio@${{ secrets.VPS_HOST }}:/var/www/vhosts/apiportfolio.mysticdatanode.net/httpdocs/
          
        # Setup Node.js environment and deploy application
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no apiportfolio@${{ secrets.VPS_HOST }} "
          cd /var/www/vhosts/apiportfolio.mysticdatanode.net/httpdocs &&
          echo 'Setting up Node.js environment...' &&
          export PATH=\"/usr/bin:/usr/local/bin:\$PATH\" &&
          echo 'Node.js version:' \$(node --version 2>/dev/null || echo 'Not found in PATH') &&
          echo 'npm version:' \$(npm --version 2>/dev/null || echo 'Not found in PATH') &&
          if ! command -v node &> /dev/null; then
            echo 'Adding Node.js to PATH...' &&
            export PATH=\"/usr/bin:/usr/local/bin:/opt/nodejs/bin:\$PATH\" &&
            if ! command -v node &> /dev/null; then
              echo 'ERROR: Node.js not found. Please install Node.js on the server.' &&
              exit 1
            fi
          fi &&
          echo 'Installing dependencies...' &&
          /usr/bin/npm install --production 2>/dev/null || npm install --production &&
          echo 'Building application...' &&
          /usr/bin/npm run build 2>/dev/null || npm run build &&
          echo 'Starting application...' &&
          pkill -f 'node.*app.js' || true &&
          nohup /usr/bin/node app.js > /tmp/portfolio.log 2>&1 & echo \$! > /tmp/portfolio.pid &&
          echo 'Portfolio PID:' \$(cat /tmp/portfolio.pid) &&
          echo 'Deployment completed successfully!'
        "
        
    - name: Verify Deployment
      run: |
        echo "Checking if site is accessible..."
        curl -f -s -o /dev/null ${{ secrets.SITE_URL }} || echo "Site check failed, but deployment may still be successful"
        echo "Deployment completed!"