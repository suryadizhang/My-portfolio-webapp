name: Deploy to IONOS VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [closed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 🏗 Checkout code
      uses: actions/checkout@v4

    - name: 🏗 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🏗 Build application
      run: |
        npm run build
        ls -la apps/web/.next || echo "Build directory not found"
        ls -la apps/web/public || echo "Public directory not found"
      env:
        NODE_ENV: production
        NEXT_PUBLIC_SITE_URL: ${{ secrets.SITE_URL }}

    - name: 🧪 Run tests (optional)
      run: npm run test --if-present

    - name: 📂 Create deployment package
      run: |
        # Navigate to the web app directory
        cd apps/web
        
        # Create deployment archive with correct paths
        tar -czf ../../deployment.tar.gz \
          .next \
          public \
          package.json \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=.env.local
        
        # Add root level files
        cd ../../
        tar -rzf deployment.tar.gz \
          ecosystem.config.js \
          deploy.sh \
          .env.production
        
        # Verify archive contents
        tar -tzf deployment.tar.gz | head -20

    - name: 🚀 Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT || '22' }}
        script: |
          # Create app directory if it doesn't exist
          mkdir -p /var/www/vhosts/${{ secrets.DOMAIN_NAME }}/httpdocs
          cd /var/www/vhosts/${{ secrets.DOMAIN_NAME }}/httpdocs

          # Backup existing deployment
          if [ -d ".next" ]; then
            tar -czf backup-$(date +%Y%m%d-%H%M%S).tar.gz .next public || true
          fi

          # Stop existing PM2 process if running
          pm2 stop portfolio-web || echo "No existing PM2 process to stop"

    - name: 📤 Upload files to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT || '22' }}
        source: "deployment.tar.gz"
        target: "/var/www/vhosts/${{ secrets.DOMAIN_NAME }}/httpdocs/"

    - name: 🔧 Configure and start application
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT || '22' }}
        script: |
          cd /var/www/vhosts/${{ secrets.DOMAIN_NAME }}/httpdocs

          # Extract deployment
          tar -xzf deployment.tar.gz
          rm deployment.tar.gz

          # Install Node.js if not present
          if ! command -v node &> /dev/null; then
            curl -fsSL https://rpm.nodesource.com/setup_20.x | sudo bash -
            sudo dnf install nodejs -y
          fi

          # Install PM2 if not present
          if ! command -v pm2 &> /dev/null; then
            sudo npm install -g pm2
          fi

          # Install production dependencies (only in apps/web if it exists, or root)
          if [ -f "apps/web/package.json" ]; then
            cd apps/web
            npm ci --production --silent
            cd ../..
          else
            npm ci --production --silent
          fi

          # Update PM2 ecosystem config with correct paths
          if [ -f "ecosystem.config.js" ]; then
            sed -i "s|/var/www/vhosts/apiportfolio.mysticdatanode.net/httpdocs|$(pwd)|g" ecosystem.config.js
            
            # Start/restart PM2 process
            pm2 restart ecosystem.config.js || pm2 start ecosystem.config.js
            
            # Save PM2 configuration
            pm2 save
            
            # Show status
            pm2 status
          else
            echo "⚠️ ecosystem.config.js not found"
          fi

    - name: ✅ Verify deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT || '22' }}
        script: |
          # Wait for app to start
          sleep 10

          # Test local endpoint
          curl -f -s http://localhost:3000 > /dev/null && echo "✅ Local endpoint test passed" || echo "⚠️ Local endpoint test failed"

          # Test PDF API
          curl -f -s http://localhost:3000/api/resume/view > /dev/null && echo "✅ PDF API test passed" || echo "⚠️ PDF API test failed"

          # Show recent logs
          pm2 logs portfolio-web --lines 10 || echo "No PM2 logs available"

    - name: 📊 Deployment Summary
      run: |
        echo "🎉 Deployment completed!"
        echo "🌐 Site: https://${{ secrets.DOMAIN_NAME }}"
        echo "📋 Check logs with: pm2 logs portfolio-web"
        echo "📈 Monitor with: pm2 monit"