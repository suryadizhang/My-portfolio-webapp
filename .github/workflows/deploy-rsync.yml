name: Deploy with Alternative SSH

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🏗 Checkout code
      uses: actions/checkout@v4

    - name: 🏗 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📦 Install and Build
      run: |
        npm ci
        npm run build
        echo "Build verification:"
        ls -la apps/web/.next || echo "No .next directory"
        ls -la apps/web/public || echo "No public directory"

    - name: 📂 Prepare deployment
      run: |
        # Create simple deployment structure
        mkdir -p dist
        
        # Copy essential files
        cp -r apps/web/.next dist/ 2>/dev/null || echo "No .next to copy"
        cp -r apps/web/public dist/ 2>/dev/null || echo "No public to copy"
        cp app.js dist/
        
        # Create simple package.json
        cat > dist/package.json << 'EOF'
        {
          "name": "portfolio-app",
          "version": "1.0.0",
          "main": "app.js",
          "scripts": {
            "start": "node app.js"
          },
          "dependencies": {
            "next": "^15.0.0",
            "react": "^18.3.1",
            "react-dom": "^18.3.1"
          }
        }
        EOF
        
        # Create deployment archive
        tar -czf deployment.tar.gz -C dist .
        
        echo "Deployment package contents:"
        tar -tzf deployment.tar.gz

    - name: 🚀 Deploy via rsync
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete --timeout=60
        path: dist/
        remote_path: /var/www/vhosts/${{ secrets.DOMAIN_NAME }}/httpdocs/
        remote_host: ${{ secrets.VPS_HOST }}
        remote_user: ${{ secrets.VPS_USERNAME }}
        remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: 🔧 Configure application
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        script: |
          cd /var/www/vhosts/${{ secrets.DOMAIN_NAME }}/httpdocs
          
          # Install dependencies if npm is available
          if command -v npm >/dev/null 2>&1; then
            echo "Installing dependencies..."
            npm install --production --silent
          else
            echo "npm not available, skipping dependency installation"
          fi
          
          # Set permissions
          chmod +x app.js 2>/dev/null || true
          
          # Test syntax
          if command -v node >/dev/null 2>&1; then
            node -c app.js && echo "✅ app.js syntax OK" || echo "❌ app.js syntax error"
          fi
          
          echo "📁 Files deployed:"
          ls -la
          
          echo "🎉 Deployment completed!"
          echo "Next: Configure Plesk Node.js to use app.js"